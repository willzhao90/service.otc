// Code generated by MockGen. DO NOT EDIT.
// Source: gitlab.com/sdce/service/otc/pkg/api (interfaces: Api)

// Package mock_api is a generated GoMock package.
package test

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	protogo "gitlab.com/sdce/protogo"
	api "gitlab.com/sdce/service/otc/pkg/api"
)

// MockApi is a mock of Api interface
type MockApi struct {
	ctrl     *gomock.Controller
	recorder *MockApiMockRecorder
}

// MockApiMockRecorder is the mock recorder for MockApi
type MockApiMockRecorder struct {
	mock *MockApi
}

// NewMockApi creates a new mock instance
func NewMockApi(ctrl *gomock.Controller) *MockApi {
	mock := &MockApi{ctrl: ctrl}
	mock.recorder = &MockApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockApi) EXPECT() *MockApiMockRecorder {
	return m.recorder
}

// FindMemberAccount mocks base method
func (m *MockApi) FindMemberAccount(arg0 context.Context, arg1, arg2 *protogo.UUID) ([]*protogo.AccountDefined, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindMemberAccount", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*protogo.AccountDefined)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindMemberAccount indicates an expected call of FindMemberAccount
func (mr *MockApiMockRecorder) FindMemberAccount(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindMemberAccount", reflect.TypeOf((*MockApi)(nil).FindMemberAccount), arg0, arg1, arg2)
}

// LockAccountBalance mocks base method
func (m *MockApi) LockAccountBalance(arg0 context.Context, arg1 *api.LockBalance) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LockAccountBalance", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// LockAccountBalance indicates an expected call of LockAccountBalance
func (mr *MockApiMockRecorder) LockAccountBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LockAccountBalance", reflect.TypeOf((*MockApi)(nil).LockAccountBalance), arg0, arg1)
}

// ReleaselockedBalance mocks base method
func (m *MockApi) ReleaselockedBalance(arg0 context.Context, arg1 *protogo.ReleaseLockedBalanceRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReleaselockedBalance", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReleaselockedBalance indicates an expected call of ReleaselockedBalance
func (mr *MockApiMockRecorder) ReleaselockedBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReleaselockedBalance", reflect.TypeOf((*MockApi)(nil).ReleaselockedBalance), arg0, arg1)
}
